version: '3.7'

services:
  #  nginx, laravel, UNIX-socket
  nginx:
    build:
      context: ./docker/nginx-with-php-fpm-use-unix-socket
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
    volumes:
      - ./data/sock:/sock
      - ./docker/nginx-with-php-fpm-use-unix-socket/default.conf:/etc/nginx/sites-enabled/default
      - ./logs/nginx-with-php-fpm-use-unix-socket:/var/log/nginx
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.2"
  app:
    build:
      context: ./docker/php-fpm-with-nginx-use-unix-socket
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
    working_dir: /app
    volumes:
      - ./data/sock:/sock
      - ./app-laravel:/app
  #  / nginx, laravel, UNIX-socket

  ubuntu:
    build:
      context: ./docker/ubuntu
    image: ubuntu202
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox

  mysql:
    command: --default-authentication-plugin=mysql_native_password
    image: mysql
#    build:
#      context: ./docker/mysql
    working_dir: /sandbox
#    restart: always
#    ports:
#      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./sandbox:/sandbox
      - ./data/mysql-draft:/var/lib/mysql
      - ./logs/mysql-draft:/var/log/mysql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.2"

  mariadb:
    command: --default-authentication-plugin=mysql_native_password
    image: mariadb
#    build:
#      context: ./docker/mariadb
    working_dir: /sandbox
#    restart: always
#    ports:
#      - ${MARIADB_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./sandbox:/sandbox
      - ./data/mariadb-draft:/var/lib/mysql
      - ./logs/mariadb-draft:/var/log/mysql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.3"

  postgres:
#    image: postgres:10.14
    build:
      context: ./docker/postgres
    working_dir: /sandbox
#    restart: always
#    ports:
#      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./sandbox:/sandbox
      - ./data/postgresql-draft:/var/lib/postgresql
      - ./logs/postgresql-draft:/var/log/postgresql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.4"

  python:
    command: python3 -m http.server 1234
#    image: python
    build:
      context: ./docker/python
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
    ports:
      - ${PYTHON_SANDBOX_PORT}:1234
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.5"

  php:
    command: php -S localhost:8000
#    image: php
    build:
      context: ./docker/php
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
    ports:
      - ${PHP_SANDBOX_PORT}:8000
#      - ${PHP_SANDBOX_YII2_PORT}:8888
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.6"

#  myclickhouse:
##    command: service clickhouse-server start && clickhouse-client
##    command: clickhouse-client
#    build:
#      context: ./docker/my_clickhouse
#    volumes:
#      - ./sandbox:/sandbox
##    ports:
##      - ${CLICKHOUSE_PORT1}:8123
##      - ${CLICKHOUSE_PORT2}:9000
##      - ${CLICKHOUSE_PORT3}:9009
#    networks:
#      sandbox-network:
#        ipv4_address: "${SANDBOX_NETWORK_ID}.7"

  clickhouse:
    image: yandex/clickhouse-server
#    ports:
#      - ${CLICKHOUSE_PORT1}:8123
#      - ${CLICKHOUSE_PORT2}:9000
#      - ${CLICKHOUSE_PORT3}:9009
    working_dir: /sandbox
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.8"
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
#  clickhouse_client:
#    image: yandex/clickhouse-client
#    command: [ '--host', 'server' ]


networks:
  laravel-network:
    ipam:
      config:
        - subnet: "${LARAVEL_NETWORK_ID}.0/24"
  sandbox-network:
    ipam:
      config:
        - subnet: "${SANDBOX_NETWORK_ID}.0/24"
