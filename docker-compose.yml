version: '3.7'

networks:
  laravel-network:
    ipam:
      config:
        - subnet: "${LARAVEL_NETWORK_ID}.0/24"
  sandbox-network:
    ipam:
      config:
        - subnet: "${SANDBOX_NETWORK_ID}.0/24"
#  laravel-app1-network:
#    ipam:
#      config:
#        - subnet: "${LARAVEL_APP1_NETWORK_ID}.0/24"


services:
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! laravel-network
  #  nginx, laravel, UNIX-socket
  nginx:
    build:
      context: docker/${APP_LARAVEL}-nginx
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
        URL: "${APP_LARAVEL}.${URL_POSTFIX}"
    volumes:
      - ./data/sock-${APP_LARAVEL}:/sock
#      - ./docker/laravel-nginx/default.conf:/etc/nginx/sites-enabled/default
      - ./logs/${APP_LARAVEL}-nginx:/var/log/nginx
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.2"
  laravel:
    build:
      context: docker/${APP_LARAVEL}-php-fpm
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
        CLIENT_HOST: "${LARAVEL_NETWORK_ID}.1"
    working_dir: /app
    volumes:
      - ./data/sock-${APP_LARAVEL}:/sock
      - ./app-${APP_LARAVEL}:/app
#      - ./docker/laravel-php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
  #  / nginx, laravel, UNIX-socket









#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! sandbox-network
  ubuntu:
    build:
      context: ./docker/ubuntu
    image: ubuntu202
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox

  mysql:
    command: --default-authentication-plugin=mysql_native_password
    image: mysql
#    build:
#      context: ./docker/mysql
#    restart: always
#    ports:
#      - ${MYSQL_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
      - ./data/mysql-draft:/var/lib/mysql
      - ./logs/mysql-draft:/var/log/mysql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.2"

  mariadb:
    command: --default-authentication-plugin=mysql_native_password
    image: mariadb
#    build:
#      context: ./docker/mariadb
    working_dir: /sandbox
#    restart: always
#    ports:
#      - ${MARIADB_PORT}:3306
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./sandbox:/sandbox
      - ./data/mariadb-draft:/var/lib/mysql
      - ./logs/mariadb-draft:/var/log/mysql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.3"

  postgres:
#    image: postgres:10.14
    build:
      context: ./docker/postgres
    working_dir: /sandbox
#    restart: always
#    ports:
#      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./sandbox:/sandbox
      - ./data/postgresql-draft:/var/lib/postgresql
      - ./logs/postgresql-draft:/var/log/postgresql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.4"

  python:
    command: python3 -m http.server 1234
#    image: python
    build:
      context: ./docker/python
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
    ports:
      - ${PYTHON_SANDBOX_PORT}:1234
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.5"

  php:
#    command: php -S 0.0.0.0:8000 -t /sandbox
    command: php -S 0.0.0.0:8000
#    image: php
    build:
      context: ./docker/php
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
    ports:
      - ${PHP_SANDBOX_PORT}:8000
#      - ${PHP_SANDBOX_YII2_PORT}:8888
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.6"

#  myclickhouse:
##    command: service clickhouse-server start && clickhouse-client
##    command: clickhouse-client
#    build:
#      context: ./docker/my_clickhouse
#    volumes:
#      - ./sandbox:/sandbox
##    ports:
##      - ${CLICKHOUSE_PORT1}:8123
##      - ${CLICKHOUSE_PORT2}:9000
##      - ${CLICKHOUSE_PORT3}:9009
#    networks:
#      sandbox-network:
#        ipv4_address: "${SANDBOX_NETWORK_ID}.7"

  clickhouse:
    image: yandex/clickhouse-server
#    ports:
#      - ${CLICKHOUSE_PORT1}:8123
#      - ${CLICKHOUSE_PORT2}:9000
#      - ${CLICKHOUSE_PORT3}:9009
    working_dir: /sandbox
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.8"
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
#  clickhouse_client:
#    image: yandex/clickhouse-client
#    command: [ '--host', 'server' ]


  php-cli:
    image: php:8.0.1-cli
    working_dir: /var/www/html
    volumes:
      - ./sandbox:/var/www/html
    #    ports:
    #      - 8081:8081
    command: php -S 0.0.0.0:8081
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.9"

  php-cli2:
    image: php:8.0.1-cli
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
    #    ports:
    #      - 8082:8082
    command: php -S 0.0.0.0:8082 -t /sandbox
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.10"

#  #  nginx, laravel, web-socket
#  nginx-web-socket:
#    build:
#      context: docker/web-socket-nginx
#      args:
#        URL: "${APP_LARAVEL_WEB_SOCKET}.${URL_POSTFIX}"
#        IP_PHP_FPM: "${SANDBOX_NETWORK_ID}.12"
#    volumes:
##      - ./docker/web-socket-nginx/default.conf:/etc/nginx/sites-enabled/default
#      - ./logs/${APP_LARAVEL_WEB_SOCKET}-nginx:/var/log/nginx
#    networks:
#      sandbox-network:
#        ipv4_address: "${SANDBOX_NETWORK_ID}.11"
#  laravel-web-socket:
#    build:
#      context: docker/web-socket-php-fpm
#      args:
#        CLIENT_HOST: "${SANDBOX_NETWORK_ID}.1"
#    working_dir: /app
#    volumes:
#      - $PATH_APP_LARAVEL_WEB_SOCKET:/app
##      - ./docker/web-socket-php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
#    networks:
#      sandbox-network:
#        ipv4_address: "${SANDBOX_NETWORK_ID}.12"
#  #  / nginx, laravel, web-socket





#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! laravel-app1-network
#  # laravel-app1-unix-socket
#  nginx-laravel-app1:
#    build:
#      context: docker/${APP_LARAVEL}-nginx
#      args:
#        UID: $UID
#        NGINX_PHP_USER: $NGINX_PHP_USER
#        URL: "${LARAVEL_APP1}.${URL_POSTFIX}"
#    volumes:
#      - ./data/sock-${LARAVEL_APP1}:/sock
#      #      - ./docker/laravel-nginx/default.conf:/etc/nginx/sites-enabled/default
#      - ./logs/${LARAVEL_APP1}-nginx:/var/log/nginx
#    networks:
#      laravel-app1-network:
#        ipv4_address: "${LARAVEL_APP1_NETWORK_ID}.2"
#  laravel-app1:
#    build:
#      context: docker/laravel-php-fpm
#      args:
#        UID: $UID
#        NGINX_PHP_USER: $NGINX_PHP_USER
#        CLIENT_HOST: "${LARAVEL_APP1_NETWORK_ID}.1"
#    working_dir: /app
#    volumes:
#      - ./data/sock-${LARAVEL_APP1}:/sock
#      - ${PATH_LARAVEL_APP1}:/app
#  #      - ./docker/laravel-php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
#  # /laravel-app1-unix-socket
#
#  #  laravel-app1-web-socket
#  nginx-laravel-app1-web-socket:
#    build:
#      context: docker/web-socket-nginx
#      args:
#        URL: "${LARAVEL_APP1_WEB_SOCKET}.${URL_POSTFIX}"
#        IP_PHP_FPM: "${LARAVEL_APP1_NETWORK_ID}.4"
#    volumes:
#      #      - ./docker/web-socket-nginx/default.conf:/etc/nginx/sites-enabled/default
#      - ./logs/web-socket-nginx-core:/var/log/nginx
#    networks:
#      laravel-app1-network:
#        ipv4_address: "${LARAVEL_APP1_NETWORK_ID}.3"
#  laravel-app1-web-socket:
#    build:
#      context: docker/web-socket-php-fpm
#      args:
#        CLIENT_HOST: "${LARAVEL_APP1_NETWORK_ID}.1"
#    working_dir: /app
#    volumes:
#      - ${PATH_LARAVEL_APP1_WEB_SOCKET}:/app
#    #      - ./docker/web-socket-php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
#    networks:
#      laravel-app1-network:
#        ipv4_address: "${LARAVEL_APP1_NETWORK_ID}.4"
#  #  / laravel-app1-web-socket
