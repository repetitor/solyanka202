version: '3.7'

networks:
  laravel-network:
    ipam:
      config:
        - subnet: "${LARAVEL_NETWORK_ID}.0/24"
  sandbox-network:
    ipam:
      config:
        - subnet: "${SANDBOX_NETWORK_ID}.0/24"


services:
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! laravel-network
  #  UNIX-socket
  laravel:
    build:
      context: docker/laravel-php-fpm
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
        CLIENT_HOST: "${LARAVEL_NETWORK_ID}.1"
    image: solyanka202:${APP_LARAVEL}-php7.4-fpm
    container_name: ${APP_LARAVEL}-php7.4-fpm-container
    working_dir: /app
    volumes:
      - ./data/sock-${APP_LARAVEL}:/sock
      - ./app-laravel:/app
#      - ./docker/laravel-php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
      - ./data/sqlite3-${APP_LARAVEL}/mydbname:/app/sqlite-data/mydbname
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.2"

  nginx-laravel:
    build:
      context: docker/laravel-nginx
      args:
        UID: $UID
        NGINX_PHP_USER: $NGINX_PHP_USER
        URL: "${APP_LARAVEL}.${URL_POSTFIX}"
    image: solyanka202:${APP_LARAVEL}-nginx
    container_name: ${APP_LARAVEL}-nginx-container
    volumes:
      - ./data/sock-${APP_LARAVEL}:/sock
      - ./logs/nginx-${APP_LARAVEL}:/var/log/nginx
#      - ./docker/laravel-nginx/default.conf:/etc/nginx/sites-enabled/default
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.3"

  mariadb-laravel:
    command: --default-authentication-plugin=mysql_native_password
    image: mariadb
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    container_name: ${APP_LARAVEL}-mariadb-container
    volumes:
      - ./data/mariadb-${APP_LARAVEL}:/var/lib/mysql
      - ./logs/mariadb-${APP_LARAVEL}:/var/log/mysql
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.4"

  mysql-laravel:
    command: --default-authentication-plugin=mysql_native_password
    image: mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    container_name: ${APP_LARAVEL}-mysql-container
    volumes:
      - ./data/mysql-${APP_LARAVEL}:/var/lib/mysql
      - ./logs/mysql-${APP_LARAVEL}:/var/log/mysql
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.5"

  mysql5-laravel:
    image: mysql:5.7.22
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    container_name: ${APP_LARAVEL}-mysql5.7.22-container
    volumes:
      - ./data/mysql5-${APP_LARAVEL}:/var/lib/mysql
      - ./logs/mysql5-${APP_LARAVEL}:/var/log/mysql
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.6"

  postgres10-laravel:
    build:
      context: ./docker/postgres10.14
    image: solyanka202:${APP_LARAVEL}-postgres10.14
    environment:
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD}
    container_name: ${APP_LARAVEL}-postgres10.14-container
    volumes:
      - ./data/postgres10-${APP_LARAVEL}:/var/lib/postgresql
      - ./logs/postgres10-${APP_LARAVEL}:/var/log/postgresql
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.7"

  sqlite3-laravel:
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    container_name: ${APP_LARAVEL}-sqlite3-container
    volumes:
      - ./data/sqlite3-${APP_LARAVEL}:/root/db/
    networks:
      laravel-network:
        ipv4_address: "${LARAVEL_NETWORK_ID}.8"
  #  / UNIX-socket



#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! sandbox-network
  ubuntu-sandbox:
    build:
      context: ./docker/ubuntu
    image: solyanka202:sandbox-ubuntu
    container_name: sandbox-ubuntu-container
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox

  mysql-sandbox:
#    restart: always
    command: --default-authentication-plugin=mysql_native_password
    image: mysql
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    container_name: sandbox-mysql-container
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
      - ./data/mysql-sandbox:/var/lib/mysql
      - ./logs/mysql-sandbox:/var/log/mysql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.2"
#    ports:
#      - ${MYSQL_PORT}:3306

  mariadb-sandbox:
#    restart: always
    command: --default-authentication-plugin=mysql_native_password
    image: mariadb
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    container_name: sandbox-mariadb-container
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
      - ./data/mariadb-sandbox:/var/lib/mysql
      - ./logs/mariadb-sandbox:/var/log/mysql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.3"
#    ports:
#      - ${MARIADB_PORT}:3306

  postgres10-sandbox:
#    restart: always
    build:
      context: ./docker/postgres10.14
    image: solyanka202:sandbox-postgres10.14
    environment:
      POSTGRES_PASSWORD: ${DB_ROOT_PASSWORD}
    container_name: sandbox-postgres10.14-container
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
      - ./data/postgres10-sandbox:/var/lib/postgresql
      - ./logs/postgres10-sandbox:/var/log/postgresql
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.4"
#    ports:
#      - ${POSTGRES_PORT}:5432

  clickhouse-sandbox:
    image: yandex/clickhouse-server
    container_name: sandbox-clickhouse-container
    working_dir: /sandbox
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.5"
#    ports:
#      - ${CLICKHOUSE_PORT1}:8123
#      - ${CLICKHOUSE_PORT2}:9000
#      - ${CLICKHOUSE_PORT3}:9009
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144

  python-sandbox:
    command: python3 -m http.server 1234
    build:
      context: ./docker/python
    image: solyanka202:sandbox-python
    container_name: sandbox-python-container
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.6"
    ports:
      - ${PYTHON_SANDBOX_PORT}:1234

  php-sandbox:
#    command: php -S 0.0.0.0:8000 -t /sandbox
    command: php -S 0.0.0.0:8000
    build:
      context: ./docker/php
    image: solyanka202:sandbox-php
    container_name: sandbox-php-container
    working_dir: /sandbox
    volumes:
      - ./sandbox:/sandbox
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.7"
    ports:
      - ${PHP_SANDBOX_PORT}:8000
#      - ${PHP_SANDBOX_YII2_PORT}:8888

  php8-cli-sandbox:
    command: php -S 0.0.0.0:8081
    image: php:8.0.1-cli
    container_name: sandbox-php8.0.1-cli-container
    working_dir: /var/www/html
    volumes:
      - ./sandbox:/var/www/html
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.8"
#    ports:
#      - 8081:8081


  php_mini:
    command: php -S 0.0.0.0:8000
    build:
      context: ./docker/php_mini
    image: solyanka202:sandbox-php_mini
    working_dir: /sandbox/draft
    volumes:
      - ./sandbox/draft:/sandbox/draft
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.9"

  php_mini_with_git:
    command: php -S 0.0.0.0:8000
    build:
      context: ./docker/php_mini_with_git
    image: solyanka202:sandbox-php_mini_with_git
    working_dir: /sandbox/draft
    volumes:
      - ./sandbox/draft:/sandbox/draft
    networks:
      sandbox-network:
        ipv4_address: "${SANDBOX_NETWORK_ID}.10"

#  #  nginx, laravel, web-socket
#  nginx-web-socket:
#    build:
#      context: docker/web-socket-nginx
#      args:
#        URL: "${APP_LARAVEL_WEB_SOCKET}.${URL_POSTFIX}"
#        IP_PHP_FPM: "${SANDBOX_NETWORK_ID}.12"
#    image: solyanka202:${APP_LARAVEL}-nginx-web-socket
#    container_name: ${APP_LARAVEL}-nginx-container-web-socket
#    volumes:
##      - ./docker/web-socket-nginx/default.conf:/etc/nginx/sites-enabled/default
#      - ./logs/nginx-${APP_LARAVEL_WEB_SOCKET}:/var/log/nginx
#    networks:
#      sandbox-network:
#        ipv4_address: "${SANDBOX_NETWORK_ID}.11"
#
#  laravel-web-socket:
#    build:
#      context: docker/web-socket-php-fpm
#      args:
#        CLIENT_HOST: "${SANDBOX_NETWORK_ID}.1"
#    image: solyanka202:${APP_LARAVEL}-php7.4-fpm-web-socket
#    container_name: ${APP_LARAVEL}-php7.4-fpm-container-web-socket
#    working_dir: /app
#    volumes:
#      - $PATH_APP_LARAVEL_WEB_SOCKET:/app
##      - ./docker/web-socket-php-fpm/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
#    networks:
#      sandbox-network:
#        ipv4_address: "${SANDBOX_NETWORK_ID}.12"
#  #  / nginx, laravel, web-socket

  sqlite3-sandbox:
    image: nouchka/sqlite3:latest
    stdin_open: true
    tty: true
    volumes:
      - ./sandbox/draft/sqlite3-sandbox/:/root/db/

#  composer-sandbox:
#    image: composer
#    container_name: composer_installation
#    working_dir: /app
#    volumes:
#      - ./app_${APP_LARAVEL1}:/app
#    command: composer install --ignore-platform-reqs
##    command: composer install